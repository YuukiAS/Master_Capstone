---
title: 'Calculate Descriptive Statistics of Participants'
author: 'Mingcheng Hu'
format: 
    pdf:
        toc: true
        keep-tex: true
        include-in-header: 
            text: |
                \usepackage{fvextra}
                \DefineVerbatimEnvironment{Highlighting}{Verbatim}{breaklines,commandchars=\\\{\}}
                \DefineVerbatimEnvironment{OutputCode}{Verbatim}{breaklines,commandchars=\\\{\}}
---


```{r}
library(gtsummary)
library(tidyverse)

source("/work/users/y/u/yuukias/BIOS-Material/BIOS992/utils/csv_utils.r")
```

```{r}
train_data <- read.csv("/work/users/y/u/yuukias/BIOS-Material/BIOS992/data/train_data_unimputed.csv")

test_data <- read.csv("/work/users/y/u/yuukias/BIOS-Material/BIOS992/data/test_data_unimputed.csv")

print(dim(train_data))
print(dim(test_data))
```


```{r}
total_data <- bind_rows(train_data, test_data) %>% select(-c(X))

print(dim(total_data))
```


```{r}
# We only care about the covariates
columns_all <- colnames(total_data)
columns_covariate_idx <- sapply(columns_all, function(x) {
    if (determine_category(x) == "covariate") {
        return(TRUE)
    } else {
        return(FALSE)
    }
})
columns_covariate <- columns_all[columns_covariate_idx]
data_covariate <- total_data %>% select(c(all_of(columns_covariate), event))
```


```{r}
# data <- data_covariate %>%
# filter(ethnicity != "e")
data <- data_covariate

# * We also need to manually relevel the categorical variables
data <- data %>%
    mutate(
        event = factor(event,
            levels = c("0", "1"),
            labels = c("No CVD", "CVD")
        ),

        # Set "Never" (0) as baseline for smoking
        smoking = factor(smoking,
            levels = c("0", "1", "2", "-3"),
            labels = c("Never", "Previous", "Current", "Prefer not to answer")
        ),

        # Set "No" (0) as baseline for diabetes
        diabetes = factor(diabetes,
            levels = c("0", "1", "-1", "-3"),
            labels = c("No", "Yes", "Do not know", "Prefer not to answer")
        ),

        # Ensure other categorical variables are properly factored
        ethnicity = factor(ethnicity,
            levels = c("1", "2", "3", "4", "5", "6"),
            labels = c("White", "Mixed", "Asian/Asian British", "Black/Black British", "Chinese", "Other")
        ),
        education = factor(education,
            levels = c("1", "2", "3", "4", "5", "6", "-7", "-3"),
            labels = c(
                "College/University degree", "A levels/AS levels",
                "O levels/GCSEs", "CSEs", "NVQ/HND/HNC",
                "Other professional", "None of the above",
                "Prefer not to answer"
            )
        ),
        activity = factor(activity,
            levels = c("0", "1", "2"),
            labels = c("Low", "Moderate", "High")
        ),
        sex = factor(sex,
            levels = c("0", "1"),
            labels = c("Female", "Male")
        ),
        hypertension_treatment = factor(hypertension_treatment,
            levels = c("0", "1"),
            labels = c("No", "Yes")
        )
    )
```

```{r}
head(data)
```

```{r}
# digits for missing rate
list("tbl_summary-fn:percent_fun" = label_style_number(scale = 100, digits = 2)) |> 
  set_gtsummary_theme()
data %>%
    tbl_summary(
        by = "event",
        type = list(
            hypertension_treatment ~ "categorical"
        ),
        digits = list(
            all_continuous() ~ 1,
            all_categorical() ~ c(0, 2)  # 0 for count, 2 for percentage
        ),
        statistic = list(
            all_continuous() ~ c("{mean}Â±{sd}"),
            all_categorical() ~ c("{n} ({p}%)")
        ),
        missing_stat = "{N_miss} ({p_miss}%)",  # show missing rate percentage instead of count
        missing_text = "Missing"
    ) %>%
    add_p() %>%
    as_kable_extra(
        booktabs = TRUE,
        longtable = TRUE,
        linesep = ""
    ) 
```